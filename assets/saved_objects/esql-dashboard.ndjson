{"attributes":{"color":"#9f5aa3","description":"","name":"chargeback"},"coreMigrationVersion":"8.8.0","created_at":"2025-02-14T11:32:46.893Z","created_by":"u_2001809318_cloud","id":"1238481e-f5f7-419d-a171-57760b64ece6","managed":false,"references":[],"type":"tag","typeMigrationVersion":"8.0.0","updated_at":"2025-02-14T11:32:46.893Z","updated_by":"u_2001809318_cloud","version":"WzEyMjQ1LDE1XQ=="}
{"attributes":{"controlGroupInput":{"chainingSystem":"HIERARCHICAL","controlStyle":"oneLine","ignoreParentSettingsJSON":"{\"ignoreFilters\":false,\"ignoreQuery\":false,\"ignoreTimerange\":false,\"ignoreValidations\":false}","panelsJSON":"{}","showApplySelections":false},"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"filter\":[],\"query\":{\"query\":\"\",\"language\":\"kuery\"}}"},"optionsJSON":"{\"useMargins\":true,\"syncColors\":false,\"syncCursor\":true,\"syncTooltips\":false,\"hidePanelTitles\":false}","panelsJSON":"[{\"type\":\"lens\",\"title\":\"Queries\",\"embeddableConfig\":{\"enhancements\":{\"dynamicActions\":{\"events\":[]}},\"syncColors\":false,\"syncCursor\":true,\"syncTooltips\":false,\"searchSessionId\":\"859ea1e5-7f08-48d3-b932-8df4f80debf7\",\"filters\":[],\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu, 0)\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_query_contribution\"},\"attributes\":{\"title\":\"Table \",\"references\":[],\"state\":{\"datasourceStates\":{\"textBased\":{\"layers\":{\"1ffd5dfb-68a9-444b-8ff3-acc9f5a0ae44\":{\"index\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu, 0)\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_query_contribution\"},\"columns\":[{\"columnId\":\"82f41aac-ffac-4293-8c3b-de42ba6809e4\",\"fieldName\":\"ecu_query_contribution\",\"meta\":{\"type\":\"number\",\"esType\":\"double\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"ecu_query_contribution\"},{\"columnId\":\"1976e668-0977-464c-b95d-09dbe96cdee3\",\"fieldName\":\"elasticsearch.index.datastream\",\"meta\":{\"type\":\"string\",\"esType\":\"keyword\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"elasticsearch.index.datastream\"}],\"timeField\":\"@timestamp\",\"allColumns\":[{\"columnId\":\"2bd7a3a8-ff15-4fc8-b8ac-dde90da1abdd\",\"fieldName\":\"2bd7a3a8-ff15-4fc8-b8ac-dde90da1abdd\",\"label\":\"@timestamp\",\"meta\":{\"type\":\"date\",\"esType\":\"date\",\"sourceParams\":{\"appliedTimeRange\":{\"type\":\"timerange\",\"from\":\"2025-05-28T21:26:53.986Z\",\"to\":\"2025-05-29T12:26:53.986Z\"},\"params\":{},\"indexPattern\":\"monitoring-indices\"}}}]}},\"indexPatternRefs\":[{\"id\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"title\":\"monitoring-indices\",\"timeField\":\"@timestamp\"}]}},\"filters\":[],\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu, 0)\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_query_contribution\"},\"visualization\":{\"shape\":\"donut\",\"layers\":[{\"layerId\":\"1ffd5dfb-68a9-444b-8ff3-acc9f5a0ae44\",\"primaryGroups\":[\"1976e668-0977-464c-b95d-09dbe96cdee3\"],\"metrics\":[\"82f41aac-ffac-4293-8c3b-de42ba6809e4\"],\"numberDisplay\":\"percent\",\"categoryDisplay\":\"default\",\"legendDisplay\":\"default\",\"nestedLegend\":false,\"layerType\":\"data\",\"collapseFns\":{\"619f86b9-6b19-4012-a562-18dc32bb9d60\":\"\",\"1976e668-0977-464c-b95d-09dbe96cdee3\":\"\"},\"emptySizeRatio\":0.3}]},\"adHocDataViews\":{\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\":{\"id\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"title\":\"monitoring-indices\",\"timeFieldName\":\"@timestamp\",\"sourceFilters\":[],\"type\":\"esql\",\"fieldFormats\":{},\"runtimeFieldMap\":{},\"allowNoIndex\":false,\"name\":\"monitoring-indices\",\"allowHidden\":false}},\"needsRefresh\":false},\"visualizationType\":\"lnsPie\"}},\"panelIndex\":\"fe0f14e4-6ae2-4375-9c0a-aea03a240a82\",\"gridData\":{\"i\":\"fe0f14e4-6ae2-4375-9c0a-aea03a240a82\",\"y\":24,\"x\":0,\"w\":12,\"h\":15}},{\"type\":\"lens\",\"title\":\"Indexing\",\"embeddableConfig\":{\"enhancements\":{\"dynamicActions\":{\"events\":[]}},\"syncColors\":false,\"syncCursor\":true,\"syncTooltips\":false,\"searchSessionId\":\"859ea1e5-7f08-48d3-b932-8df4f80debf7\",\"filters\":[],\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu, 0)\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_index_contribution\"},\"attributes\":{\"title\":\"Table @timestamp & composite_key & composite_tier_key & elasticsearch.cluster.name & elasticsearch.index.datastream\",\"references\":[],\"state\":{\"datasourceStates\":{\"textBased\":{\"layers\":{\"fc511c78-39e1-47d2-bb9c-640fed1acd44\":{\"index\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu, 0)\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_index_contribution\"},\"columns\":[],\"timeField\":\"@timestamp\"},\"bbb070e7-7016-4153-a893-e7942d504691\":{\"index\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu, 0)\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_index_contribution\"},\"columns\":[{\"columnId\":\"e6135ecd-d89c-48e5-9e55-623ef7b9ea2a\",\"fieldName\":\"elasticsearch.index.datastream\",\"meta\":{\"type\":\"string\",\"esType\":\"keyword\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"elasticsearch.index.datastream\"},{\"columnId\":\"ca2f7c7a-b969-4b8a-a523-d7c321ade1f4\",\"fieldName\":\"ecu_index_contribution\",\"meta\":{\"type\":\"number\",\"esType\":\"double\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"ecu_index_contribution\",\"params\":{}}],\"allColumns\":[{\"columnId\":\"a5811148-269c-40e4-bbd8-41230b8cf53b\",\"fieldName\":\"elasticsearch.cluster.name\",\"meta\":{\"type\":\"string\",\"esType\":\"keyword\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"elasticsearch.cluster.name\"},{\"columnId\":\"e6135ecd-d89c-48e5-9e55-623ef7b9ea2a\",\"fieldName\":\"elasticsearch.index.datastream\",\"meta\":{\"type\":\"string\",\"esType\":\"keyword\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"elasticsearch.index.datastream\"},{\"columnId\":\"@timestamp\",\"fieldName\":\"@timestamp\",\"label\":\"@timestamp\",\"meta\":{\"type\":\"date\",\"esType\":\"date\"}},{\"columnId\":\"composite_key\",\"fieldName\":\"composite_key\",\"label\":\"composite_key\",\"meta\":{\"type\":\"string\",\"esType\":\"keyword\"}},{\"columnId\":\"composite_tier_key\",\"fieldName\":\"composite_tier_key\",\"label\":\"composite_tier_key\",\"meta\":{\"type\":\"string\",\"esType\":\"keyword\"}},{\"columnId\":\"elasticsearch.cluster.name\",\"fieldName\":\"elasticsearch.cluster.name\",\"label\":\"elasticsearch.cluster.name\",\"meta\":{\"type\":\"string\",\"esType\":\"keyword\"}},{\"columnId\":\"elasticsearch.index.datastream\",\"fieldName\":\"elasticsearch.index.datastream\",\"label\":\"elasticsearch.index.datastream\",\"meta\":{\"type\":\"string\",\"esType\":\"keyword\"}}]}},\"indexPatternRefs\":[{\"id\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"title\":\"monitoring-indices\",\"timeField\":\"@timestamp\"}]}},\"filters\":[],\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu, 0)\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_index_contribution\"},\"visualization\":{\"shape\":\"donut\",\"layers\":[{\"layerId\":\"bbb070e7-7016-4153-a893-e7942d504691\",\"primaryGroups\":[\"e6135ecd-d89c-48e5-9e55-623ef7b9ea2a\"],\"metrics\":[\"ca2f7c7a-b969-4b8a-a523-d7c321ade1f4\"],\"numberDisplay\":\"percent\",\"categoryDisplay\":\"default\",\"legendDisplay\":\"default\",\"nestedLegend\":false,\"layerType\":\"data\",\"colorMapping\":{\"assignments\":[],\"specialAssignments\":[{\"rule\":{\"type\":\"other\"},\"color\":{\"type\":\"loop\"},\"touched\":false}],\"paletteId\":\"default\",\"colorMode\":{\"type\":\"categorical\"}},\"emptySizeRatio\":0.3}]},\"adHocDataViews\":{\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\":{\"id\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"title\":\"monitoring-indices\",\"timeFieldName\":\"@timestamp\",\"sourceFilters\":[],\"type\":\"esql\",\"fieldFormats\":{},\"runtimeFieldMap\":{},\"allowNoIndex\":false,\"name\":\"monitoring-indices\",\"allowHidden\":false}},\"needsRefresh\":false},\"visualizationType\":\"lnsPie\"}},\"panelIndex\":\"4f41ddb0-e96c-4607-961d-78fe5fe4037d\",\"gridData\":{\"i\":\"4f41ddb0-e96c-4607-961d-78fe5fe4037d\",\"y\":24,\"x\":12,\"w\":12,\"h\":15}},{\"type\":\"lens\",\"title\":\"Storage\",\"embeddableConfig\":{\"enhancements\":{\"dynamicActions\":{\"events\":[]}},\"syncColors\":false,\"syncCursor\":true,\"syncTooltips\":false,\"searchSessionId\":\"859ea1e5-7f08-48d3-b932-8df4f80debf7\",\"filters\":[],\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu, 0), \\n    ecu_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu, 0)\\n\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_storage_contribution\"},\"attributes\":{\"title\":\"Table @timestamp & composite_key & composite_tier_key & elasticsearch.cluster.name & elasticsearch.index.datastream\",\"references\":[],\"state\":{\"datasourceStates\":{\"textBased\":{\"layers\":{\"68c1be48-ce29-4a0a-9e65-643e0680843f\":{\"index\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu, 0), \\n    ecu_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu, 0)\\n\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_storage_contribution\"},\"columns\":[],\"timeField\":\"@timestamp\"},\"6322833d-a070-44c0-a484-9fe791a866b9\":{\"index\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu, 0), \\n    ecu_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu, 0)\\n\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_storage_contribution\"},\"columns\":[{\"columnId\":\"f4e246c2-2f1a-49c1-950f-e5364973a9ae\",\"fieldName\":\"elasticsearch.index.datastream\",\"meta\":{\"type\":\"string\",\"esType\":\"keyword\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"elasticsearch.index.datastream\"},{\"columnId\":\"68ae3193-426a-47e5-8d4c-812ce7fb652e\",\"fieldName\":\"ecu_storage_contribution\",\"meta\":{\"type\":\"number\",\"esType\":\"double\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"ecu_storage_contribution\"}]}},\"indexPatternRefs\":[{\"id\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"title\":\"monitoring-indices\",\"timeField\":\"@timestamp\"}]}},\"filters\":[],\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu, 0), \\n    ecu_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu, 0)\\n\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_storage_contribution\"},\"visualization\":{\"shape\":\"donut\",\"layers\":[{\"layerId\":\"6322833d-a070-44c0-a484-9fe791a866b9\",\"primaryGroups\":[\"f4e246c2-2f1a-49c1-950f-e5364973a9ae\"],\"metrics\":[\"68ae3193-426a-47e5-8d4c-812ce7fb652e\"],\"numberDisplay\":\"percent\",\"categoryDisplay\":\"default\",\"legendDisplay\":\"default\",\"nestedLegend\":false,\"layerType\":\"data\",\"colorMapping\":{\"assignments\":[],\"specialAssignments\":[{\"rule\":{\"type\":\"other\"},\"color\":{\"type\":\"loop\"},\"touched\":false}],\"paletteId\":\"default\",\"colorMode\":{\"type\":\"categorical\"}},\"emptySizeRatio\":0.3}]},\"adHocDataViews\":{\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\":{\"id\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"title\":\"monitoring-indices\",\"timeFieldName\":\"@timestamp\",\"sourceFilters\":[],\"type\":\"esql\",\"fieldFormats\":{},\"runtimeFieldMap\":{},\"allowNoIndex\":false,\"name\":\"monitoring-indices\",\"allowHidden\":false}},\"needsRefresh\":false},\"visualizationType\":\"lnsPie\"}},\"panelIndex\":\"be08de5f-f5b8-473c-a27d-e85078210858\",\"gridData\":{\"i\":\"be08de5f-f5b8-473c-a27d-e85078210858\",\"y\":24,\"x\":24,\"w\":12,\"h\":15}},{\"type\":\"lens\",\"title\":\"Weighted\",\"embeddableConfig\":{\"enhancements\":{\"dynamicActions\":{\"events\":[]}},\"syncColors\":false,\"syncCursor\":true,\"syncTooltips\":false,\"searchSessionId\":\"859ea1e5-7f08-48d3-b932-8df4f80debf7\",\"filters\":[],\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis), \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis),\\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu, 0), \\n    ecu_value_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu_value, 0),\\n    ecu_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu, 0), \\n    ecu_value_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu_value, 0),\\n    // Gets the storage contribution from the primary data set size. For searchable snapshots this is the only value available.\\n    ecu_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu_value, 0),\\n    // Overwrites the storage contribution when we have sum_store_size availble. This will be the case for all non-searchable snapshot data streams.\\n    ecu_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu_value, 0),\\n    // Weighted ECU contribution calculation\\n    // Edit these weights\\n    storage_weight = 40,\\n    query_weight = 20,\\n    index_weight = 20,\\n    total_weight_hot = storage_weight + query_weight + index_weight,\\n    total_weight_cold = storage_weight + query_weight,\\n    ecu_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight) +\\n            (ecu_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    ),\\n    ecu_value_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight) +\\n            (ecu_value_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    )\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_weighted_contribution\"},\"attributes\":{\"title\":\"Table @timestamp & composite_key & composite_tier_key & elasticsearch.cluster.name & elasticsearch.index.datastream\",\"references\":[],\"state\":{\"datasourceStates\":{\"textBased\":{\"layers\":{\"15feed8c-7b09-458c-8e15-19e1b7b53af5\":{\"index\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis), \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis),\\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu, 0), \\n    ecu_value_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu_value, 0),\\n    ecu_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu, 0), \\n    ecu_value_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu_value, 0),\\n    // Gets the storage contribution from the primary data set size. For searchable snapshots this is the only value available.\\n    ecu_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu_value, 0),\\n    // Overwrites the storage contribution when we have sum_store_size availble. This will be the case for all non-searchable snapshot data streams.\\n    ecu_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu_value, 0),\\n    // Weighted ECU contribution calculation\\n    // Edit these weights\\n    storage_weight = 40,\\n    query_weight = 20,\\n    index_weight = 20,\\n    total_weight_hot = storage_weight + query_weight + index_weight,\\n    total_weight_cold = storage_weight + query_weight,\\n    ecu_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight) +\\n            (ecu_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    ),\\n    ecu_value_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight) +\\n            (ecu_value_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    )\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_weighted_contribution\"},\"columns\":[],\"timeField\":\"@timestamp\"},\"44f45c56-7785-44a9-a2d0-2254fd413a88\":{\"index\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis), \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis),\\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu, 0), \\n    ecu_value_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu_value, 0),\\n    ecu_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu, 0), \\n    ecu_value_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu_value, 0),\\n    // Gets the storage contribution from the primary data set size. For searchable snapshots this is the only value available.\\n    ecu_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu_value, 0),\\n    // Overwrites the storage contribution when we have sum_store_size availble. This will be the case for all non-searchable snapshot data streams.\\n    ecu_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu_value, 0),\\n    // Weighted ECU contribution calculation\\n    // Edit these weights\\n    storage_weight = 40,\\n    query_weight = 20,\\n    index_weight = 20,\\n    total_weight_hot = storage_weight + query_weight + index_weight,\\n    total_weight_cold = storage_weight + query_weight,\\n    ecu_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight) +\\n            (ecu_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    ),\\n    ecu_value_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight) +\\n            (ecu_value_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    )\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_weighted_contribution\"},\"columns\":[{\"columnId\":\"307f5cc0-0802-4635-8fc8-b4759af0c4a5\",\"fieldName\":\"elasticsearch.index.datastream\",\"meta\":{\"type\":\"string\",\"esType\":\"keyword\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"elasticsearch.index.datastream\"},{\"columnId\":\"190a1dfd-95b4-47ed-bf1e-976020911857\",\"fieldName\":\"ecu_weighted_contribution\",\"meta\":{\"type\":\"number\",\"esType\":\"double\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"ecu_weighted_contribution\"}]}},\"indexPatternRefs\":[{\"id\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"title\":\"monitoring-indices\",\"timeField\":\"@timestamp\"}]}},\"filters\":[],\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis), \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis),\\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu, 0), \\n    ecu_value_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu_value, 0),\\n    ecu_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu, 0), \\n    ecu_value_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu_value, 0),\\n    // Gets the storage contribution from the primary data set size. For searchable snapshots this is the only value available.\\n    ecu_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu_value, 0),\\n    // Overwrites the storage contribution when we have sum_store_size availble. This will be the case for all non-searchable snapshot data streams.\\n    ecu_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu_value, 0),\\n    // Weighted ECU contribution calculation\\n    // Edit these weights\\n    storage_weight = 40,\\n    query_weight = 20,\\n    index_weight = 20,\\n    total_weight_hot = storage_weight + query_weight + index_weight,\\n    total_weight_cold = storage_weight + query_weight,\\n    ecu_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight) +\\n            (ecu_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    ),\\n    ecu_value_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight) +\\n            (ecu_value_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    )\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_weighted_contribution\"},\"visualization\":{\"shape\":\"donut\",\"layers\":[{\"layerId\":\"44f45c56-7785-44a9-a2d0-2254fd413a88\",\"primaryGroups\":[\"307f5cc0-0802-4635-8fc8-b4759af0c4a5\"],\"metrics\":[\"190a1dfd-95b4-47ed-bf1e-976020911857\"],\"numberDisplay\":\"percent\",\"categoryDisplay\":\"default\",\"legendDisplay\":\"default\",\"nestedLegend\":false,\"layerType\":\"data\",\"colorMapping\":{\"assignments\":[],\"specialAssignments\":[{\"rule\":{\"type\":\"other\"},\"color\":{\"type\":\"loop\"},\"touched\":false}],\"paletteId\":\"default\",\"colorMode\":{\"type\":\"categorical\"}},\"emptySizeRatio\":0.3}]},\"adHocDataViews\":{\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\":{\"id\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"title\":\"monitoring-indices\",\"timeFieldName\":\"@timestamp\",\"sourceFilters\":[],\"type\":\"esql\",\"fieldFormats\":{},\"runtimeFieldMap\":{},\"allowNoIndex\":false,\"name\":\"monitoring-indices\",\"allowHidden\":false}},\"needsRefresh\":false},\"visualizationType\":\"lnsPie\"}},\"panelIndex\":\"e97ac831-c320-4536-80c2-636b72ec2426\",\"gridData\":{\"i\":\"e97ac831-c320-4536-80c2-636b72ec2426\",\"y\":24,\"x\":36,\"w\":12,\"h\":15}},{\"type\":\"lens\",\"embeddableConfig\":{\"enhancements\":{\"dynamicActions\":{\"events\":[]}},\"syncColors\":false,\"syncCursor\":true,\"syncTooltips\":false,\"searchSessionId\":\"859ea1e5-7f08-48d3-b932-8df4f80debf7\",\"filters\":[],\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis), \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis),\\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_rate,total_ecu\"},\"attributes\":{\"title\":\"Table @timestamp & composite_key & composite_tier_key & elasticsearch.cluster.name & elasticsearch.index.datastream\",\"references\":[],\"state\":{\"datasourceStates\":{\"textBased\":{\"layers\":{\"b1144d5f-4611-4875-8126-df7e55f27cd1\":{\"index\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis), \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis),\\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_rate,total_ecu\"},\"columns\":[{\"columnId\":\"133d5dca-21ac-4dc7-a9aa-470ff7e7ef96\",\"fieldName\":\"elasticsearch.cluster.name\",\"meta\":{\"type\":\"string\",\"esType\":\"keyword\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"elasticsearch.cluster.name\"},{\"columnId\":\"0b4935e7-cd45-4821-a6e9-d17001abc004\",\"fieldName\":\"elasticsearch.index.tier\",\"meta\":{\"type\":\"string\",\"esType\":\"keyword\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"elasticsearch.index.tier\"},{\"columnId\":\"8489e80e-6e1d-411d-a660-45ffd52aca2c\",\"fieldName\":\"total_ecu\",\"meta\":{\"type\":\"number\",\"esType\":\"double\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"total_ecu\"}],\"timeField\":\"@timestamp\"}},\"indexPatternRefs\":[{\"id\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"title\":\"monitoring-indices\",\"timeField\":\"@timestamp\"}]}},\"filters\":[],\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis), \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis),\\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_rate,total_ecu\"},\"visualization\":{\"layerId\":\"b1144d5f-4611-4875-8126-df7e55f27cd1\",\"layerType\":\"data\",\"columns\":[{\"columnId\":\"133d5dca-21ac-4dc7-a9aa-470ff7e7ef96\",\"isTransposed\":false,\"isMetric\":false},{\"columnId\":\"0b4935e7-cd45-4821-a6e9-d17001abc004\",\"isTransposed\":true,\"isMetric\":false},{\"columnId\":\"8489e80e-6e1d-411d-a660-45ffd52aca2c\",\"isTransposed\":false,\"isMetric\":true}]},\"adHocDataViews\":{\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\":{\"id\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"title\":\"monitoring-indices\",\"timeFieldName\":\"@timestamp\",\"sourceFilters\":[],\"type\":\"esql\",\"fieldFormats\":{},\"runtimeFieldMap\":{},\"allowNoIndex\":false,\"name\":\"monitoring-indices\",\"allowHidden\":false}},\"needsRefresh\":false},\"visualizationType\":\"lnsDatatable\"}},\"panelIndex\":\"1dba5f65-7ee3-41fc-8611-762b1f9cf7f1\",\"gridData\":{\"i\":\"1dba5f65-7ee3-41fc-8611-762b1f9cf7f1\",\"y\":0,\"x\":0,\"w\":24,\"h\":15}},{\"type\":\"lens\",\"embeddableConfig\":{\"enhancements\":{\"dynamicActions\":{\"events\":[]}},\"syncColors\":false,\"syncCursor\":true,\"syncTooltips\":false,\"searchSessionId\":\"859ea1e5-7f08-48d3-b932-8df4f80debf7\",\"filters\":[],\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis), \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis),\\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_rate,total_ecu\"},\"attributes\":{\"title\":\"Table @timestamp & composite_key & composite_tier_key & elasticsearch.cluster.name & elasticsearch.index.datastream\",\"references\":[],\"state\":{\"datasourceStates\":{\"textBased\":{\"layers\":{\"c68e428a-fc55-4fab-9f2d-0bf13f30d678\":{\"index\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis), \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis),\\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_rate,total_ecu\"},\"columns\":[],\"timeField\":\"@timestamp\"},\"1323cd72-2a37-459f-9bbc-f55b018588f8\":{\"index\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis), \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis),\\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_rate,total_ecu\"},\"columns\":[{\"columnId\":\"fbca842b-2d1c-4a6c-97ca-731df6df0b9f\",\"fieldName\":\"elasticsearch.cluster.name\",\"meta\":{\"type\":\"string\",\"esType\":\"keyword\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"elasticsearch.cluster.name\"},{\"columnId\":\"bcc37441-47a0-423e-841f-2f557bf8284f\",\"fieldName\":\"elasticsearch.index.tier\",\"meta\":{\"type\":\"string\",\"esType\":\"keyword\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"elasticsearch.index.tier\"},{\"columnId\":\"cc8c0f7e-4d29-4e2d-a559-f176b26580cc\",\"fieldName\":\"total_ecu\",\"meta\":{\"type\":\"number\",\"esType\":\"double\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"total_ecu\"}]}},\"indexPatternRefs\":[{\"id\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"title\":\"monitoring-indices\",\"timeField\":\"@timestamp\"}]}},\"filters\":[],\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis), \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis),\\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_rate,total_ecu\"},\"visualization\":{\"shape\":\"treemap\",\"layers\":[{\"layerId\":\"1323cd72-2a37-459f-9bbc-f55b018588f8\",\"primaryGroups\":[\"fbca842b-2d1c-4a6c-97ca-731df6df0b9f\",\"bcc37441-47a0-423e-841f-2f557bf8284f\"],\"metrics\":[\"cc8c0f7e-4d29-4e2d-a559-f176b26580cc\"],\"numberDisplay\":\"percent\",\"categoryDisplay\":\"default\",\"legendDisplay\":\"default\",\"nestedLegend\":false,\"layerType\":\"data\",\"colorMapping\":{\"assignments\":[],\"specialAssignments\":[{\"rule\":{\"type\":\"other\"},\"color\":{\"type\":\"loop\"},\"touched\":false}],\"paletteId\":\"default\",\"colorMode\":{\"type\":\"categorical\"}}}]},\"adHocDataViews\":{\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\":{\"id\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"title\":\"monitoring-indices\",\"timeFieldName\":\"@timestamp\",\"sourceFilters\":[],\"type\":\"esql\",\"fieldFormats\":{},\"runtimeFieldMap\":{},\"allowNoIndex\":false,\"name\":\"monitoring-indices\",\"allowHidden\":false}},\"needsRefresh\":false},\"visualizationType\":\"lnsPie\"}},\"panelIndex\":\"c359d961-4008-4e34-ae46-9198f0aa919a\",\"gridData\":{\"i\":\"c359d961-4008-4e34-ae46-9198f0aa919a\",\"y\":0,\"x\":24,\"w\":24,\"h\":15}},{\"type\":\"lens\",\"embeddableConfig\":{\"enhancements\":{\"dynamicActions\":{\"events\":[]}},\"syncColors\":false,\"syncCursor\":true,\"syncTooltips\":false,\"searchSessionId\":\"859ea1e5-7f08-48d3-b932-8df4f80debf7\",\"filters\":[],\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis), \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis),\\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu, 0), \\n    ecu_value_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu_value, 0),\\n    ecu_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu, 0), \\n    ecu_value_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu_value, 0),\\n    // Gets the storage contribution from the primary data set size. For searchable snapshots this is the only value available.\\n    ecu_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu_value, 0),\\n    // Overwrites the storage contribution when we have sum_store_size availble. This will be the case for all non-searchable snapshot data streams.\\n    ecu_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu_value, 0),\\n    // Weighted ECU contribution calculation\\n    // Edit these weights\\n    storage_weight = 40,\\n    query_weight = 20,\\n    index_weight = 20,\\n    total_weight_hot = storage_weight + query_weight + index_weight,\\n    total_weight_cold = storage_weight + query_weight,\\n    ecu_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight) +\\n            (ecu_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    ),\\n    ecu_value_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight) +\\n            (ecu_value_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    )\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_query_contribution, \\n    ecu_index_contribution, \\n    ecu_storage_contribution,\\n    ecu_weighted_contribution\\n| WHERE elasticsearch.cluster.name IS NOT NULL\"},\"attributes\":{\"title\":\"Table @timestamp & composite_key & composite_tier_key & elasticsearch.cluster.name & elasticsearch.index.datastream\",\"references\":[],\"state\":{\"datasourceStates\":{\"textBased\":{\"layers\":{\"8a0ac338-2dd8-454e-bb79-f47d85429fe0\":{\"index\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis), \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis),\\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu, 0), \\n    ecu_value_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu_value, 0),\\n    ecu_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu, 0), \\n    ecu_value_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu_value, 0),\\n    // Gets the storage contribution from the primary data set size. For searchable snapshots this is the only value available.\\n    ecu_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu_value, 0),\\n    // Overwrites the storage contribution when we have sum_store_size availble. This will be the case for all non-searchable snapshot data streams.\\n    ecu_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu_value, 0),\\n    // Weighted ECU contribution calculation\\n    // Edit these weights\\n    storage_weight = 40,\\n    query_weight = 20,\\n    index_weight = 20,\\n    total_weight_hot = storage_weight + query_weight + index_weight,\\n    total_weight_cold = storage_weight + query_weight,\\n    ecu_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight) +\\n            (ecu_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    ),\\n    ecu_value_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight) +\\n            (ecu_value_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    )\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_query_contribution, \\n    ecu_index_contribution, \\n    ecu_storage_contribution,\\n    ecu_weighted_contribution\\n| WHERE elasticsearch.cluster.name IS NOT NULL\"},\"columns\":[{\"columnId\":\"dfc9a1be-f3df-49a3-b35b-8a6e706ee913\",\"fieldName\":\"elasticsearch.index.tier\",\"meta\":{\"type\":\"string\",\"esType\":\"keyword\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"elasticsearch.index.tier\"},{\"columnId\":\"f053e517-ff71-461b-b659-5ee72560c9c6\",\"fieldName\":\"ecu_query_contribution\",\"meta\":{\"type\":\"number\",\"esType\":\"double\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"ecu_query_contribution\"},{\"columnId\":\"da30274f-ce01-4a38-88a1-62a44af6a9c0\",\"fieldName\":\"ecu_index_contribution\",\"meta\":{\"type\":\"number\",\"esType\":\"double\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"ecu_index_contribution\"},{\"columnId\":\"e2415066-9384-4476-b450-aab78a55dd94\",\"fieldName\":\"ecu_storage_contribution\",\"meta\":{\"type\":\"number\",\"esType\":\"double\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"ecu_storage_contribution\"},{\"columnId\":\"e4b5c0b1-5991-4b4b-9911-7fbeaec7c913\",\"fieldName\":\"ecu_weighted_contribution\",\"meta\":{\"type\":\"number\",\"esType\":\"double\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"ecu_weighted_contribution\"},{\"columnId\":\"6ee0c6b1-eb19-489b-9861-bf5fa78203fd\",\"fieldName\":\"elasticsearch.cluster.name\",\"meta\":{\"type\":\"string\",\"esType\":\"keyword\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"elasticsearch.cluster.name\"}],\"timeField\":\"@timestamp\"}},\"indexPatternRefs\":[{\"id\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"title\":\"monitoring-indices\",\"timeField\":\"@timestamp\"}]}},\"filters\":[],\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis), \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis),\\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu, 0), \\n    ecu_value_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu_value, 0),\\n    ecu_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu, 0), \\n    ecu_value_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu_value, 0),\\n    // Gets the storage contribution from the primary data set size. For searchable snapshots this is the only value available.\\n    ecu_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu_value, 0),\\n    // Overwrites the storage contribution when we have sum_store_size availble. This will be the case for all non-searchable snapshot data streams.\\n    ecu_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu_value, 0),\\n    // Weighted ECU contribution calculation\\n    // Edit these weights\\n    storage_weight = 40,\\n    query_weight = 20,\\n    index_weight = 20,\\n    total_weight_hot = storage_weight + query_weight + index_weight,\\n    total_weight_cold = storage_weight + query_weight,\\n    ecu_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight) +\\n            (ecu_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    ),\\n    ecu_value_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight) +\\n            (ecu_value_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    )\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_query_contribution, \\n    ecu_index_contribution, \\n    ecu_storage_contribution,\\n    ecu_weighted_contribution\\n| WHERE elasticsearch.cluster.name IS NOT NULL\"},\"visualization\":{\"layerId\":\"8a0ac338-2dd8-454e-bb79-f47d85429fe0\",\"layerType\":\"data\",\"columns\":[{\"columnId\":\"dfc9a1be-f3df-49a3-b35b-8a6e706ee913\",\"isTransposed\":false,\"isMetric\":false},{\"columnId\":\"f053e517-ff71-461b-b659-5ee72560c9c6\",\"isTransposed\":false,\"isMetric\":true},{\"columnId\":\"da30274f-ce01-4a38-88a1-62a44af6a9c0\",\"isTransposed\":false,\"isMetric\":true},{\"columnId\":\"e2415066-9384-4476-b450-aab78a55dd94\",\"isTransposed\":false,\"isMetric\":true},{\"columnId\":\"e4b5c0b1-5991-4b4b-9911-7fbeaec7c913\",\"isTransposed\":false,\"isMetric\":true},{\"columnId\":\"6ee0c6b1-eb19-489b-9861-bf5fa78203fd\",\"isTransposed\":true,\"isMetric\":false}]},\"adHocDataViews\":{\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\":{\"id\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"title\":\"monitoring-indices\",\"timeFieldName\":\"@timestamp\",\"sourceFilters\":[],\"type\":\"esql\",\"fieldFormats\":{},\"runtimeFieldMap\":{},\"allowNoIndex\":false,\"name\":\"monitoring-indices\",\"allowHidden\":false}},\"needsRefresh\":false},\"visualizationType\":\"lnsDatatable\"}},\"panelIndex\":\"8f026f46-ae0a-4ab2-8641-67188c613dde\",\"gridData\":{\"i\":\"8f026f46-ae0a-4ab2-8641-67188c613dde\",\"y\":15,\"x\":0,\"w\":48,\"h\":9}},{\"type\":\"lens\",\"embeddableConfig\":{\"enhancements\":{\"dynamicActions\":{\"events\":[]}},\"syncColors\":false,\"syncCursor\":true,\"syncTooltips\":false,\"searchSessionId\":\"859ea1e5-7f08-48d3-b932-8df4f80debf7\",\"filters\":[],\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis), \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis),\\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu, 0), \\n    ecu_value_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu_value, 0),\\n    ecu_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu, 0), \\n    ecu_value_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu_value, 0),\\n    // Gets the storage contribution from the primary data set size. For searchable snapshots this is the only value available.\\n    ecu_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu_value, 0),\\n    // Overwrites the storage contribution when we have sum_store_size availble. This will be the case for all non-searchable snapshot data streams.\\n    ecu_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu_value, 0),\\n    // Weighted ECU contribution calculation\\n    // Edit these weights\\n    storage_weight = 40,\\n    query_weight = 20,\\n    index_weight = 20,\\n    total_weight_hot = storage_weight + query_weight + index_weight,\\n    total_weight_cold = storage_weight + query_weight,\\n    ecu_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight) +\\n            (ecu_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    ),\\n    ecu_value_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight) +\\n            (ecu_value_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    )\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_rate,total_ecu,total_ecu_value,\\n    ecu_query_contribution, \\n    ecu_index_contribution, \\n    ecu_storage_contribution,\\n    ecu_weighted_contribution\\n//| LIMIT 10\"},\"attributes\":{\"title\":\"Table @timestamp & composite_key & composite_tier_key & elasticsearch.cluster.name & elasticsearch.index.datastream\",\"references\":[],\"state\":{\"datasourceStates\":{\"textBased\":{\"layers\":{\"1e2dc484-6b11-4468-a871-773054ea0b77\":{\"index\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis), \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis),\\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu, 0), \\n    ecu_value_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu_value, 0),\\n    ecu_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu, 0), \\n    ecu_value_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu_value, 0),\\n    // Gets the storage contribution from the primary data set size. For searchable snapshots this is the only value available.\\n    ecu_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu_value, 0),\\n    // Overwrites the storage contribution when we have sum_store_size availble. This will be the case for all non-searchable snapshot data streams.\\n    ecu_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu_value, 0),\\n    // Weighted ECU contribution calculation\\n    // Edit these weights\\n    storage_weight = 40,\\n    query_weight = 20,\\n    index_weight = 20,\\n    total_weight_hot = storage_weight + query_weight + index_weight,\\n    total_weight_cold = storage_weight + query_weight,\\n    ecu_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight) +\\n            (ecu_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    ),\\n    ecu_value_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight) +\\n            (ecu_value_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    )\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_rate,total_ecu,total_ecu_value,\\n    ecu_query_contribution, \\n    ecu_index_contribution, \\n    ecu_storage_contribution,\\n    ecu_weighted_contribution\\n//| LIMIT 10\"},\"columns\":[{\"columnId\":\"1509e6a1-9737-4eea-b9cf-992ba2c28363\",\"fieldName\":\"elasticsearch.index.datastream\",\"meta\":{\"type\":\"string\",\"esType\":\"keyword\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"elasticsearch.index.datastream\"},{\"columnId\":\"9adbab25-2232-4779-ab9b-91df2003290a\",\"fieldName\":\"elasticsearch.index.tier\",\"meta\":{\"type\":\"string\",\"esType\":\"keyword\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"elasticsearch.index.tier\"},{\"columnId\":\"fe3a1f50-65e0-4d43-a0f6-99ff91eed480\",\"fieldName\":\"ecu_query_contribution\",\"meta\":{\"type\":\"number\",\"esType\":\"double\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"ecu_query_contribution\"},{\"columnId\":\"9a771622-4417-4ab7-8992-d4569f668619\",\"fieldName\":\"ecu_index_contribution\",\"meta\":{\"type\":\"number\",\"esType\":\"double\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"ecu_index_contribution\"},{\"columnId\":\"6f143190-d6e6-431a-b694-620f692625d2\",\"fieldName\":\"ecu_storage_contribution\",\"meta\":{\"type\":\"number\",\"esType\":\"double\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"ecu_storage_contribution\"},{\"columnId\":\"698e85f1-2a42-4845-82d2-332a9131bdd9\",\"fieldName\":\"ecu_weighted_contribution\",\"meta\":{\"type\":\"number\",\"esType\":\"double\",\"sourceParams\":{\"indexPattern\":\"monitoring-indices\"}},\"label\":\"ecu_weighted_contribution\"}],\"timeField\":\"@timestamp\"}},\"indexPatternRefs\":[{\"id\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"title\":\"monitoring-indices\",\"timeField\":\"@timestamp\"}]}},\"filters\":[],\"query\":{\"esql\":\"FROM monitoring-indices\\n| WHERE @timestamp < now() - 3 day\\n| EVAL \\n    @timestamp = DATE_TRUNC(1 day, @timestamp),\\n    composite_key = CONCAT(DATE_FORMAT(\\\"yyyy-MM-dd\\\", @timestamp), \\\"_\\\", elasticsearch.cluster.name),\\n    composite_tier_key = CONCAT(composite_key, \\\"_\\\", REPLACE(elasticsearch.index.tier,\\\"/\\\", \\\"_\\\"))\\n| STATS \\n    sum_query_time_local = sum(elasticsearch.index.total.search.query_time_in_millis), \\n    sum_indexing_time_local = sum(elasticsearch.index.total.indexing.index_time_in_millis),\\n    sum_data_set_store_size_local = sum(elasticsearch.index.primaries.store.total_data_set_size_in_bytes),\\n    sum_store_size_local = sum(elasticsearch.index.total.store.size_in_bytes)\\n  BY \\n    @timestamp,\\n    composite_key,\\n    composite_tier_key,\\n    elasticsearch.cluster.name,\\n    elasticsearch.index.datastream,\\n    elasticsearch.index.tier\\n| LOOKUP JOIN billing_cluster_cost_lookup\\nON composite_key\\n| LOOKUP JOIN cluster_deployment_contribution_lookup\\nON composite_tier_key\\n| EVAL \\n    ecu_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu, 0), \\n    ecu_value_query_contribution = CASE (sum_query_time > 0, (sum_query_time_local / sum_query_time) * total_ecu_value, 0),\\n    ecu_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu, 0), \\n    ecu_value_index_contribution = CASE (sum_indexing_time > 0, (sum_indexing_time_local / sum_indexing_time) * total_ecu_value, 0),\\n    // Gets the storage contribution from the primary data set size. For searchable snapshots this is the only value available.\\n    ecu_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_data_set_store_size > 0, (sum_data_set_store_size_local / sum_data_set_store_size) * total_ecu_value, 0),\\n    // Overwrites the storage contribution when we have sum_store_size availble. This will be the case for all non-searchable snapshot data streams.\\n    ecu_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu, 0), \\n    ecu_value_storage_contribution = CASE (sum_store_size > 0, (sum_store_size_local / sum_store_size) * total_ecu_value, 0),\\n    // Weighted ECU contribution calculation\\n    // Edit these weights\\n    storage_weight = 40,\\n    query_weight = 20,\\n    index_weight = 20,\\n    total_weight_hot = storage_weight + query_weight + index_weight,\\n    total_weight_cold = storage_weight + query_weight,\\n    ecu_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight) +\\n            (ecu_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_storage_contribution * storage_weight) +\\n            (ecu_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    ),\\n    ecu_value_weighted_contribution = CASE (\\n        elasticsearch.index.tier == \\\"hot/content\\\",\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight) +\\n            (ecu_value_index_contribution * index_weight)\\n        ) / total_weight_hot,\\n        (\\n            (ecu_value_storage_contribution * storage_weight) +\\n            (ecu_value_query_contribution * query_weight)\\n        ) / total_weight_cold\\n    )\\n| KEEP \\n    @timestamp,composite_key,composite_tier_key,\\n    elasticsearch.cluster.name,elasticsearch.index.datastream,elasticsearch.index.tier,\\n    ecu_rate,total_ecu,total_ecu_value,\\n    ecu_query_contribution, \\n    ecu_index_contribution, \\n    ecu_storage_contribution,\\n    ecu_weighted_contribution\\n//| LIMIT 10\"},\"visualization\":{\"layerId\":\"1e2dc484-6b11-4468-a871-773054ea0b77\",\"layerType\":\"data\",\"columns\":[{\"columnId\":\"1509e6a1-9737-4eea-b9cf-992ba2c28363\",\"isTransposed\":false,\"isMetric\":false},{\"columnId\":\"9adbab25-2232-4779-ab9b-91df2003290a\",\"isTransposed\":false,\"isMetric\":false},{\"columnId\":\"fe3a1f50-65e0-4d43-a0f6-99ff91eed480\",\"isTransposed\":false,\"isMetric\":true},{\"columnId\":\"9a771622-4417-4ab7-8992-d4569f668619\",\"isTransposed\":false,\"isMetric\":true},{\"columnId\":\"6f143190-d6e6-431a-b694-620f692625d2\",\"isTransposed\":false,\"isMetric\":true},{\"columnId\":\"698e85f1-2a42-4845-82d2-332a9131bdd9\",\"isTransposed\":false,\"isMetric\":true}],\"sorting\":{\"columnId\":\"698e85f1-2a42-4845-82d2-332a9131bdd9\",\"direction\":\"desc\"}},\"adHocDataViews\":{\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\":{\"id\":\"3db0d6b31d8afd75067c7a445bb4f066a52d9d451e8237e51956bd0d7e1ecb52\",\"title\":\"monitoring-indices\",\"timeFieldName\":\"@timestamp\",\"sourceFilters\":[],\"type\":\"esql\",\"fieldFormats\":{},\"runtimeFieldMap\":{},\"allowNoIndex\":false,\"name\":\"monitoring-indices\",\"allowHidden\":false}},\"needsRefresh\":false},\"visualizationType\":\"lnsDatatable\"}},\"panelIndex\":\"84687a98-3e8c-4408-ab82-8c1a0c6489c1\",\"gridData\":{\"i\":\"84687a98-3e8c-4408-ab82-8c1a0c6489c1\",\"y\":39,\"x\":0,\"w\":48,\"h\":15}}]","timeRestore":false,"title":"CF ES|QL","version":3},"coreMigrationVersion":"8.8.0","created_at":"2025-05-29T13:09:08.451Z","created_by":"u_2001809318_cloud","id":"ae3ecf41-dbcb-4f95-98a9-5cb42e1299c8","managed":false,"references":[{"id":"1238481e-f5f7-419d-a171-57760b64ece6","name":"tag-ref-1238481e-f5f7-419d-a171-57760b64ece6","type":"tag"}],"type":"dashboard","typeMigrationVersion":"10.2.0","updated_at":"2025-05-29T14:02:42.794Z","updated_by":"u_2001809318_cloud","version":"WzY4MDgsMzFd"}
{"excludedObjects":[],"excludedObjectsCount":0,"exportedCount":2,"missingRefCount":0,"missingReferences":[]}